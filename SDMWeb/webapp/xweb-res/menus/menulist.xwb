<%@ page isELIgnored="true" %>
<%@ taglib uri="xweb" prefix="xweb" %>
<%@ taglib uri="wcomp" prefix="wcomp" %>
<%@ taglib uri="core" prefix="c" %>
<%@ taglib uri="fmt" prefix="fmt" %>

<wcomp:importComponents compName="dsAvailableGroups"/>
<wcomp:importComponents compName="dsAssociatedGroups"/>
<c:if test="${empty dsAvailableGroups}">
	<wcomp:dataset id="dsAvailableGroups" stateful="true" dataSource="hibernateXWeb" 
			query="select g from Group g, HibernateMappedMenuItem m where g not in elements (m.permissions) and m.id = ? order by g.id">
		<wcomp:queryParam value="/"/>
	</wcomp:dataset>
</c:if>
<c:if test="${empty dsAssociatedGroups}">
	<wcomp:dataset id="dsAssociatedGroups" stateful="true" dataSource="hibernateXWeb" 
		   query="select items.permissions from HibernateMappedMenuItem items where items.id = '/'"/>			   
</c:if>

<xweb:setBundle baseName="FPM-administration"/>

	<script type="text/javascript">
		var inputIcon;
		function setUrl(url)
		{
			inputIcon.value = url;
		}
		
		// Menu Operations
		function newItem (parentItem, typeVal) {
			url = "<c:url value='/xweb-res/menus/newmenuitem.xwb?'/>PARENT=" + parentItem + "&type=" + typeVal;
			new Ajax(url, {	method: 'post',
							evalScripts: true, update: $('itemdetail'),							
							onRequest: function() {
								$('itemdetail').setStyle('opacity', 0.2);
							},
							onComplete: function() {
								$('itemdetail').setStyle('opacity', 1);
							}
					}).request();
			
		}
		
		function deleteItem (itemId) {
			if (itemId == null) {
				as = $ES('A', $('treemenu'));
				for (i=0; i<as.length; i++) {
					if (as[i].hasClass('selected')) {
						itemId = as[i].parentNode.id;
						break;
					}
				}
			}
		
			if (itemId && confirm('<fmt:message key="menu.confirm_delete"/>')) {
				url = "<c:url value='/xweb-res/menus/deleteMenuItem.do?'/>menuitemchecked=" + itemId;
				new Ajax(url, {method: 'post'}).request();
				
				$(itemId).remove();
				sortIt.organizeTree(sortIt);
			}
		}
		
		function changeMenuItemFlag (flagName, flagValue, itemId) {
			url = "<c:url value='/xweb-res/menus/updateMenuItemsFlags.do?'/>menuitemchecked=" + itemId + "&" + flagName + "=" + flagValue;
			new Ajax(url, {method: 'post'}).request();
			
			if (flagName == 'enabled') {
				var imgName = '';
				if (flagValue == 'T') {
					imgName = 'itemactive';
					$(itemId).addClass('itemMenuEnabled');
					$(itemId).setStyles({'color': 'black', 'font-style': 'normal'});
					$ES('li', itemId).each( function(item) {
						item.addClass('itemMenuEnabled');
						item.setStyles({'color': 'black', 'font-style': 'normal'});
					});
				}
				else {
					imgName = 'itemdisabled';
					$(itemId).removeClass('itemMenuEnabled');
					$(itemId).setStyles({'color': '#cccccc', 'font-style': 'italic'});
					$ES('li', itemId).each( function(item) {
						item.removeClass('itemMenuEnabled');
						item.setStyles({'color': '#cccccc', 'font-style': 'italic'});
					});
				}
					
				$ES('img[class=elemMenuItem]', itemId).each( function(item) {
					item.src = '<c:url value="/xweb-res/images/tree/menuitem/"/>' + imgName + '.gif';
				});
			}
			else if (flagName == 'marked') {
				var imgName = '';
				if (flagValue == 'T') {
					imgName = 'markedactive';
					$(itemId).addClass('itemMenuMarked');
				}
				else {
					imgName = $(itemId).hasClass('itemMenuEnabled') ? 'itemactive' : 'itemdisabled';
					$(itemId).removeClass('itemMenuMarked');
				}
					
				$ES('img[class=elemMenuItem]', itemId).each( function(item) {
					item.src = '<c:url value="/xweb-res/images/tree/menuitem/"/>' + imgName + '.gif';
				});
			}
		}
		
		// tree
		function openWin(url)
		{
			var left = (screen.availWidth-450)/2;
			var top = (screen.availHeight-130)/2;
			window.open(url, "ImageUpload", "height=130,width=450,left="+left+",top="+top);
		}

		function contexMenuItem(event){
			el = $(new Event(event).target);
			var idMenuItem = "/";
			if(el.hasClass('elemMenuItem'))
			{
				selectMenu(new Event(event));
				while (el.nodeName != 'LI') {
					el = el.parentNode;
				}
				idMenuItem = el.getProperty('id');
			}
			if(idMenuItem.indexOf('administration') > 0)
				return true;
			var contextMenuPop = $('contextMenuPop');
			contextMenuPop.setStyles({
		          top: new Event(event).page.y, 
		          left: new Event(event).page.x
			});
			url = "<c:url value='/xweb-res/menus/contextmenu.xwb'/>?idMenuItem=" + idMenuItem + "&no_template=true";			
			new Ajax(url, {	method: 'post', 
							evalScripts: true,
							update: $('contextMenuPop'),
							onComplete: function() {$('contextMenuPop').setStyle('display', 'block');}
						}).request();
	        return false;
		}
		
		function closeContexMenuItem(event){
			el = $(new Event(event).target);
			$('contextMenuPop').setStyle('display', 'none');
		}
		
		function selectMenu(event){
			var el = $(event.target);
			while (el.nodeName != 'A') {
				el = el.parentNode;
			}
			el.addClass('selected');
			$('treemenu').getElements('A').each(function(item){
				if( el != item )
					item.removeClass('selected');
			});
			idMenuItem = el.getParent().getProperty('id');
			url = "<c:url value='/xweb-res/menus/editmenuitem.xwb'/>?MENU_ITEM_ID=" + idMenuItem;
			new Ajax(url, {	method: 'post', 
							evalScripts: true,
							update: $('itemdetail'),
							onRequest: function() {
								$('itemdetail').setStyle('opacity', 0.2);
							},
							onComplete: function() {
								$('itemdetail').setStyle('opacity', 1);
							}
						}
					).request();

			url = "null.bind?goto=/xweb-res/menus/menulist.xwb&referrer=/xweb-res/menus/menulist.xwb&menuListTree.expandId=" + idMenuItem;
			new Ajax(url, {	method: 'post'}).request();					
					
			if(idMenuItem.indexOf('admin') == -1)
				$('delMenuButton').style.display = 'inline';
			else 
				$('delMenuButton').style.display = 'none';
			
			if(idMenuItem.indexOf('administration') > 0)
				$('newMenuButton').style.display = 'none';
			else
				$('newMenuButton').style.display = 'inline';
		}
		
		function expandUpwards(itemId) {
			// expand upwards
			var lis = $ES('li', $('treemenu'));
			for (i=0; i<lis.length; i++) {
				if ($E('li[id=' + itemId + ']', lis[i]) != null || lis[i].id == itemId) {
					lis[i].parentNode.style.display = "block";
					if (lis[i].id != itemId) {
						if (lis[i].getParent() != null && lis[i].getParent().getLast() == lis[i])
							$E('img[class=treeImage]', lis[i]).src = "<c:url value='/xweb-res/images/tree/minus2.gif'/>";
						else 
							$E('img[class=treeImage]', lis[i]).src = "<c:url value='/xweb-res/images/tree/minus3.gif'/>";
					}
				}
			}
		}
		
		function refreshIds(el, newParentId)
		{
			oldId = el.id;
			oldParentId = el.id.substring(0, el.id.lastIndexOf('/'));
			newId = (newParentId == '/') ? el.id.substring(el.id.lastIndexOf('/')) : newParentId + el.id.substring(el.id.lastIndexOf('/'));
			$ES('LI', el).each( function(item){
				item.id = newParentId + item.id.substring(oldParentId.length);
			});
			el.id = newId;
		}
		
		var parentEl;
		var prevSib;
		var nextSib;
		var sortIt;
		window.addEvent('domready', function() {
			disableSelection($('rightMenuBox'));
			$('menuItemTree').oncontextmenu = function() {return false};
			$('menuItemTree').addEvent('contextmenu', contexMenuItem);			
			document.addEvent('click', closeContexMenuItem);
			sortIt = new Nested('treemenu', {
				collapse: true,
				onStart: function(el) {
					el.addClass('drag');					
					parentEl = el.parentNode.parentNode;
					prevSib = el.getPrevious();
					nextSib = el.getNext();
				},
				onComplete: function(el) {
					el.removeClass('drag');
					if( parentEl == el.parentNode.parentNode && prevSib == el.getPrevious() && nextSib == el.getNext() )
						sortIt.organizeTree(sortIt);
					if (el.moved && !confirm('sposta?')) {
						if (prevSib != null)
							el.injectAfter(prevSib);
						else if (nextSib != null)
							el.injectBefore(nextSib);
						else{
							newOl = new Element('OL').setStyles({
								'list-style-type': 'none'
							}).injectInside(parentEl);
							el.injectInside(newOl);
						}
						sortIt.organizeTree(sortIt);
					}
					else if (el.moved) {
						url = "<c:url value='/xweb-res/menus/moveMenuItem.do'/>?MENU_ITEM_ID=" + el.id;
						
						newParent = ($(el.parentNode.parentNode).nodeName != sortIt.options.childTag) ? null : el.parentNode.parentNode;
						newParentId = (newParent == null) ? '/' : newParent.id;
						if (newParentId != null)
							url += "&NEW_PARENT=" + newParentId;
							
						itemBeforeId = (el.getNext() == null) ? null : el.getNext().id;
						if (itemBeforeId != null)
							url += "&MENU_ITEM_BEFORE=" + itemBeforeId;
						new Ajax(url, {method: 'get'}).request();
						refreshIds(el,newParentId);
					}
				}
			});
			sortIt.options.collapseImage = "<c:url value='/xweb-res/images/tree/plus3.gif'/>";
			sortIt.options.collapseLastImage = "<c:url value='/xweb-res/images/tree/plus2.gif'/>";
			sortIt.options.ncollapseImage = "<c:url value='/xweb-res/images/tree/minus3.gif'/>";
			sortIt.options.ncollapseLastImage = "<c:url value='/xweb-res/images/tree/minus2.gif'/>";
			sortIt.options.lastImage = "<c:url value='/xweb-res/images/tree/line2.gif'/>";
			sortIt.options.insideImage = "<c:url value='/xweb-res/images/tree/line3.gif'/>";
			$('treemenu').getElements('A').each(function(item){
				item.addEvent('click', selectMenu.bindWithEvent(item));
			});
			
		});
		
		function newItemTypeSel(parentItem)
		{
			if (parentItem == null) {
				var found = false;
				
				as = $ES('A', $('treemenu'));
				for (i=0; i<as.length; i++) {
					if (as[i].hasClass('selected')) {
						parentItem = as[i].parentNode.id;
						found = true;
						break;
					}
				}
				if (!found) 
					parentItem = '/';
			}

			showLightbox();
			
			url = "<c:url value='/xweb-res/menus/newmenu_typesel.xwb'/>?parentItem=" + parentItem;
			new Ajax(url, {method: 'post', evalScripts: true, update: $('light'), onComplete: function() {$('light').setStyle('display', 'block');}}).request();
			
		}
		
		function showLightbox()
		{
			overlay = new Element('div').setStyles({
				  width: '3000px', 
		 		  height: '3000px', 
		          position: 'absolute', 
		          top: '0%', 
		          left: '0%', 
		          'background-color': '#FFFFFF', 
		          'z-index': 1001, 
		          'moz-opacity': 0.5, 
		          'opacity':.50, 
		          'filter': 'alpha(opacity=50)'
			}).setProperty('id', 'overlay').injectInside(document.body);
			
			light = new Element('div').setStyles({
				  width: 220, 
		          position: 'absolute',
		          top: '30%',
		          left: '40%', 
		          border: '1px solid black', 
		          display: 'none',
		          'background-color': '#F2F2F2',
		          'z-index': 1002,
		          'overflow': 'auto'
			}).setProperty('id', 'light').injectInside(document.body);
			
			
			document.body.style.overflow = 'hidden';
		}
		
		function hideLightbox()
		{
			$('light').remove();
			$('overlay').remove();
			document.body.style.overflow = 'auto';
		}
		
	</script>

<table class="functions">
	<tr>
		<th><fmt:message key="menus.menu_header_capital"/></th>
	</tr>
	<tr>
		<td>
			<a href="#" id="newMenuButton" onclick="newItemTypeSel(null);"><img style="vertical-align: bottom;" src="<c:url value='/images/icons/docs_folders_and_files/add_document_2/add_document_2_16_h_g.gif'/>"/> Nuovo Menu</a>
			<a href="#" id="delMenuButton" onclick="deleteItem(null);" style="display: none;"><img style="vertical-align: bottom;" src="<c:url value='/images/icons/docs_folders_and_files/delete_document_2/delete_document_2_16_h_g.gif'/>"/> Elimina Menu</a>
		</td>
	</tr>
</table>
<br>

<table class="boxlayout">
	<tr>
		<td width="30%" class="boxlayout" id="rightMenuBox">
			<div style="height:100%;" id="menuItemTree" class="treeDefault box">
				<label><fmt:message key="menus.menu_header_capital"/></label>

				<xweb:xmenu id="menuListTree" menuId="/" expandAll="true" datasourceName="hibernateXWeb" xslSource="/xweb-res/menus/tree_menu.xsl"/>
				
			</div>
		</td>
		<td class="boxlayout">
			<div class="box" style="height:100%; padding-left: 4px; padding-bottom: 15px;">
				<div class="box" id="itemdetail">
					<label><fmt:message key="general.detail_capital"/></label>
				</div>
				<div class="box" id="itemoptions">
				</div>
			</div>
		</td>
	</tr>
</table>

<div id="contextMenuPop" class="contextMenuPop" style="background-color: #818DA5; padding: 6px 6px 6px 6px; position: absolute; display: none">

</div>

<c:if test="${!empty menuListTree.expandId}">
	<script type="text/javascript">
		expandUpwards('<c:out value="${menuListTree.expandId}"/>');
	</script>
</c:if>