alter table TB_WF_CONTENT_STATUS modify MODULE_ID VARCHAR2(50);

CREATE TABLE TB_CONTENT_PERMISSION (
       CONTENT_ID              NUMBER NOT NULL,
       PRINCIPAL            VARCHAR2(20) NOT NULL,
       PRINCIPAL_TYPE		   VARCHAR2(20) NOT NULL,
       READ_PERMISSION			NUMBER(1) NOT NULL,
       WRITE_PERMISSION			NUMBER(1) NOT NULL,
       CONSTRAINT PK_TB_CONTENT_PERMISSION PRIMARY KEY (PRINCIPAL, CONTENT_ID, PRINCIPAL_TYPE),
       CONSTRAINT CONTENT_READ_PERMISSION_CHECK CHECK (READ_PERMISSION in (0, 1)),
       CONSTRAINT CONTENT_WRITE_PERMISSION_CHECK CHECK (WRITE_PERMISSION in (0, 1)),
       CONSTRAINT CONTENT_PRINCIPAL_TYPE_CHECK CHECK (PRINCIPAL_TYPE in ('USER', 'GROUP'))
);

ALTER TABLE TB_CONTENT_PERMISSION
       ADD CONSTRAINT FK_CONTENT_PERMISSION
              FOREIGN KEY (CONTENT_ID)
                             REFERENCES TB_WF_CONTENT_STATUS
                             ON DELETE CASCADE;

DROP TABLE TB_DIARY CASCADE CONSTRAINTS;

CREATE TABLE TB_DIARY (
       CONTENT_ID           NUMBER NOT NULL,
       SUBJECT              VARCHAR2(100) NULL,
       MESSAGE_DATE         DATE NULL,
       MESSAGE              CLOB NULL,
       CONSTRAINT PK_TB_DIARY
              PRIMARY KEY (CONTENT_ID)
);

ALTER TABLE TB_DIARY
       ADD CONSTRAINT FK_DIARY_WF_CONTENT_STATUS
              FOREIGN KEY (CONTENT_ID)
                             REFERENCES TB_WF_CONTENT_STATUS
                             ON DELETE CASCADE;

CREATE TABLE TB_MESSAGE (
       CONTENT_ID        	NUMBER NOT NULL,
       SUBJECT              VARCHAR2(100) NULL,
       MESSAGE_DATE         DATE NULL,
       MESSAGE              CLOB NULL,
       CONSTRAINT PK_TB_MESSAGE
              PRIMARY KEY (CONTENT_ID)
);

ALTER TABLE TB_MESSAGE
       ADD CONSTRAINT FK_MESSAGE_WF_CONTENT_STATUS
              FOREIGN KEY (CONTENT_ID)
                             REFERENCES TB_WF_CONTENT_STATUS
                             ON DELETE CASCADE;

INSERT INTO TB_MODULES ( MODULE_TYPE, ADMIN_URI, MODULE_TITLE, MODULE_ID, CONTENT_LOCATION, DESCRIPTION ) VALUES (2, '/xweb-res/usermessage/usermessagelist.xwb', 'Messaggi Personali', 'USERMESSAGE', 'TB_MESSAGE', 'Gestione contenuti: inserisci e organizza i messaggi personali per utenti e gruppi di utenti');

INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'RELEASE', 'USERMESSAGE', 'Rilascia Messaggio', 1);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'APPROVE', 'USERMESSAGE', 'Approva Messaggio', 1);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'PUBLISH', 'USERMESSAGE', 'Pubblica Messaggio', 1);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'REFUSE', 'USERMESSAGE', 'Rifiuta Messaggio', NULL);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'OFFLINE', 'USERMESSAGE', 'Metti Offline', NULL);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'DELETE', 'USERMESSAGE', 'Elimina Messaggio', NULL);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'CREATE', 'USERMESSAGE', 'Nuovo Messaggio', NULL);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'UPDATE', 'USERMESSAGE', 'Modifica Messaggio', NULL);
INSERT INTO TB_FUNCTIONS ( FUNCTION_ID, MODULE_ID, FUNCTION_TITLE, WF_MGR_AUTO ) VALUES ( 'FILTER', 'USERMESSAGE', 'Trova', NULL);

INSERT INTO TB_GROUPS ( GROUP_ID, GROUP_TYPE, DESCRIPTION, RULE ) VALUES ('MESSAGE_RELEASE', 1, 'Gruppo  di supervisori al rilascio di messaggi personali', NULL);
INSERT INTO TB_GROUPS ( GROUP_ID, GROUP_TYPE, DESCRIPTION, RULE ) VALUES ('MESSAGE_EDITOR', 1, 'Gruppo di editor di messaggi personali', NULL);
INSERT INTO TB_GROUPS ( GROUP_ID, GROUP_TYPE, DESCRIPTION, RULE ) VALUES ('MESSAGE_APPROVE', 1, 'Gruppo di supervisori alla pubblicazione di messaggi personali', NULL);

-- userMessage functions - groups associations
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_EDITOR', 'CREATE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_EDITOR', 'DELETE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_EDITOR', 'UPDATE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_EDITOR', 'FILTER', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_RELEASE', 'REFUSE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_RELEASE', 'RELEASE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_RELEASE', 'FILTER', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_APPROVE', 'OFFLINE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_APPROVE', 'APPROVE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_APPROVE', 'REFUSE', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_APPROVE', 'PUBLISH', 'USERMESSAGE');
INSERT INTO TB_FUNCTION_GROUPS ( GROUP_ID, FUNCTION_ID, MODULE_ID ) VALUES ('MESSAGE_APPROVE', 'FILTER', 'USERMESSAGE');

INSERT INTO TB_USER_GROUP ( GROUP_ID, USER_ID ) VALUES ('MESSAGE_APPROVE', 'xweb.approver');
INSERT INTO TB_USER_GROUP ( GROUP_ID, USER_ID ) VALUES ('MESSAGE_EDITOR', 'xweb.editor');
INSERT INTO TB_USER_GROUP ( GROUP_ID, USER_ID ) VALUES ('MESSAGE_RELEASE', 'xweb.supervisor');

UPDATE TB_MODULES SET MODULE_ID = 'POPUP', MODULE_TITLE = 'Pop-Up', DESCRIPTION = 'Modulo per la gestione dei Pop-Up' where MODULE_ID = 'BANNER'
UPDATE TB_FUNCTIONS SET MODULE_ID = 'POPUP' where MODULE_ID = 'BANNER'