/*******************************************************************************
-- elimina i moduli NEWSLETTER e SEARCH. Questi moduli non esistono più in XWeb, 
-- decommentare solo se non più utilizzati.
delete from TB_MODULES where MODULE_ID='NEWSLETTER';
delete from TB_MODULES where MODULE_ID='SEARCH';
*******************************************************************************/

-- aggiornamento delle tabelle dei contenuti
-- aggiunto campo CONTAINER_TYPE che diventa FK assieme a CONTAINER_NAME
ALTER TABLE TB_CONTAINER_SCHEDULE DROP CONSTRAINT FK_SCHED_CONTAINER;
ALTER TABLE TB_CONTAINER_SCHEDULE ADD CONTAINER_TYPE VARCHAR2(20);
UPDATE TB_CONTAINER_SCHEDULE SET CONTAINER_TYPE=(SELECT TYPE FROM TB_CONTAINER WHERE CONTAINER_NAME=NAME);

ALTER TABLE TB_CONTAINER DROP CONSTRAINT PK_TB_CONTAINER;
ALTER TABLE TB_CONTAINER ADD CONSTRAINT PK_TB_CONTAINER  PRIMARY KEY (NAME, TYPE);
ALTER TABLE TB_CONTAINER_SCHEDULE ADD CONSTRAINT FK_SCHED_CONTAINER
	FOREIGN KEY (CONTAINER_NAME,CONTAINER_TYPE) REFERENCES TB_CONTAINER ON DELETE CASCADE;
commit;
	
-- aggiunta campo CONTENT_ID alla tabella TB_HTML
ALTER TABLE TB_HTML DROP CONSTRAINT PK_TB_HTML;
ALTER TABLE TB_HTML ADD CONTENT_ID NUMBER(*, 0);
ALTER TABLE TB_HTML ADD TITLE VARCHAR2(50);
-- query per mettere il lock alla tabella
SELECT * FROM TB_WF_CONTENT_STATUS FOR UPDATE;
UPDATE TB_HTML SET CONTENT_ID=(SELECT MAX(WF_CONTENT_ID) FROM TB_WF_CONTENT_STATUS);
UPDATE TB_HTML SET CONTENT_ID=(SELECT A FROM (SELECT CONTENT_ID+ROWNUM A, SCHEDULE_ID B FROM TB_HTML) WHERE B=SCHEDULE_ID);

INSERT ALL INTO TB_WF_CONTENT_STATUS (WF_CONTENT_ID, WF_STATUS_ID, CREATION_DATE, MODULE_ID) 
	VALUES (CONTENT_ID, 1, SYSDATE, 'HTML') SELECT CONTENT_ID FROM TB_HTML;
INSERT ALL INTO TB_CONTENT_PERMISSION (PRINCIPAL, CONTENT_ID, PRINCIPAL_TYPE, READ_PERMISSION, WRITE_PERMISSION) 
	VALUES ('EVERYONE', WF_CONTENT_ID, 'GROUP', 1, 1) SELECT WF_CONTENT_ID FROM TB_WF_CONTENT_STATUS WHERE MODULE_ID='HTML';	
	
ALTER TABLE TB_HTML MODIFY CONTENT_ID NUMBER(*, 0) NOT NULL;
ALTER TABLE TB_HTML ADD CONSTRAINT PK_TB_HTML PRIMARY KEY (CONTENT_ID);
ALTER TABLE TB_HTML ADD CONSTRAINT FK_HTML_CONTENT
	FOREIGN KEY (CONTENT_ID) REFERENCES TB_WF_CONTENT_STATUS ON DELETE CASCADE;
commit;	

-- AGGIUNTA CAMPO CONTENT_ID ALLA TABELLA TB_CONTAINER_SCHEDULE
ALTER TABLE TB_HTML	DROP CONSTRAINT FK_HTML_SCHEDULE;

ALTER TABLE TB_CONTAINER_SCHEDULE ADD CONTENT_ID NUMBER(*, 0);
UPDATE TB_CONTAINER_SCHEDULE SET CONTENT_ID=(SELECT CONTENT_ID FROM TB_HTML WHERE TB_CONTAINER_SCHEDULE.SCHEDULE_ID=TB_HTML.SCHEDULE_ID);

ALTER TABLE TB_CONTAINER_SCHEDULE ADD CONSTRAINT FK_SCHED_HTML
	FOREIGN KEY (CONTENT_ID) REFERENCES TB_HTML ON DELETE CASCADE;
commit;	
	
-- colonna non più utilizzata
ALTER TABLE TB_HTML DROP COLUMN SCHEDULE_ID;

/***********************************************************
script che porta l'id del modulo dei sondaggi da POOL a POLL
(per consistenza con il campo MODULE_ID di WF_CONTENT_STATUS)
- controllare l'esistenza di eventuali query che fanno riferimento all'id 'POOL'
- e l'utilizzo del tag hasUserFunction con moduleName 'POOL'
***********************************************************/
ALTER TABLE TB_FUNCTIONS DROP CONSTRAINT FK_TB_MODULES;
ALTER TABLE TB_FUNCTION_GROUPS DROP CONSTRAINT FK_TB_FUNCTIONS;

UPDATE TB_MODULES SET MODULE_ID = 'POLL' WHERE MODULE_ID = 'POOL';
UPDATE TB_FUNCTIONS SET MODULE_ID = 'POLL' WHERE MODULE_ID = 'POOL';
UPDATE TB_FUNCTION_GROUPS SET MODULE_ID = 'POLL' WHERE MODULE_ID = 'POOL';


ALTER TABLE TB_FUNCTIONS ADD  CONSTRAINT FK_TB_MODULES
 FOREIGN KEY (MODULE_ID)
  REFERENCES TB_MODULES (MODULE_ID);

ALTER TABLE TB_FUNCTION_GROUPS ADD  CONSTRAINT FK_TB_FUNCTIONS
 FOREIGN KEY (FUNCTION_ID, MODULE_ID)
  REFERENCES TB_FUNCTIONS (FUNCTION_ID, MODULE_ID);
/**************************
Fine script update id POLL
***************************/

-- Modifica nome tabella da TB_POOL a TB_POLL e da TB_POOL_USER a TB_POLL_USER
rename TB_POOL to TB_POLL;
rename TB_POOL_USER to TB_POLL_USER;

alter table TB_POLL_USER rename column POOL_ID to POLL_ID;
alter table TB_ANSWERS rename column POOL_ID to POLL_ID;
              
alter table TB_POLL_USER rename constraint FK_TB_POOL_TB_POOL_USER to FK_TB_POLL_TB_POLL_USER;
alter table TB_POLL rename constraint FK_POOL_WF_CONTENT_STATUS to FK_POLL_WF_CONTENT_STATUS;
alter table TB_ANSWERS rename constraint FK_TB_POOL to FK_TB_POLL;
alter table TB_POLL rename constraint PK_TB_POOL to PK_TB_POLL;
alter table TB_POLL_USER rename constraint PK_TB_POOL_USER to PK_TB_POLL_USER;

-- Modifica nome tabella TB_WF_STATUS a TB_CONTENT_STATUS e TB_WF_CONTENT_STATUS a TB_CONTENT
rename TB_WF_STATUS to TB_CONTENT_STATUS;
rename TB_WF_CONTENT_STATUS to TB_CONTENT;

alter table TB_CONTENT_STATUS rename column WF_STATUS_ID to STATUS_ID;
alter table TB_CONTENT rename column WF_CONTENT_ID to CONTENT_ID;
alter table TB_CONTENT rename column WF_STATUS_ID to STATUS_ID;
                             
ALTER TABLE TB_NEWS RENAME CONSTRAINT FK_NEWS_WF_CONTENT_STATUS TO FK_NEWS_CONTENT;
ALTER TABLE TB_POLL RENAME CONSTRAINT FK_POLL_WF_CONTENT_STATUS TO FK_POLL_CONTENT;
ALTER TABLE TB_DIARY RENAME CONSTRAINT FK_DIARY_WF_CONTENT_STATUS TO FK_DIARY_CONTENT;
ALTER TABLE TB_MESSAGE RENAME CONSTRAINT FK_MESSAGE_WF_CONTENT_STATUS TO FK_MESSAGE_CONTENT;
ALTER TABLE TB_CONTENT RENAME CONSTRAINT FK_TB_WF_STATUS TO FK_CONTENT_STATUS;
ALTER TABLE TB_CONTENT RENAME CONSTRAINT PK_WF_CONTENT_STATUS TO PK_TB_CONTENT;
ALTER TABLE TB_CONTENT_STATUS RENAME CONSTRAINT PK_WF_STATUS TO PK_TB_CONTENT_STATUS;